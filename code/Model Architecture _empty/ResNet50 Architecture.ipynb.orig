{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "dbb493fb-eda5-45ff-89b5-b86f0274806d",
   "metadata": {},
   "source": [
    "#### ResNet50 for 3 Channels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7175eb19-1a60-4d75-83aa-52f579385e36",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (111690645.py, line 7)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[1], line 7\u001b[0;36m\u001b[0m\n\u001b[0;31m    for train_index, val_index in sss.split(, y_train_all):\u001b[0m\n\u001b[0m                                            ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "# Stratified Shuffle Split\n",
    "from sklearn.model_selection import StratifiedShuffleSplit\n",
    "random_seed = 56\n",
    "sss = StratifiedShuffleSplit(n_splits=1, test_size=my_test_size, random_state=random_seed)\n",
    "\n",
    "# Perform the split\n",
    "for train_index, val_index in sss.split(, y_train_all):\n",
    "    X_train, X_val = X_train_all[train_index], X_train_all[val_index]\n",
    "    y_train, y_val = y_train_all[train_index], y_train_all[val_index]\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "BME342 Env",
   "language": "python",
   "name": "bme342_gpu_env"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
